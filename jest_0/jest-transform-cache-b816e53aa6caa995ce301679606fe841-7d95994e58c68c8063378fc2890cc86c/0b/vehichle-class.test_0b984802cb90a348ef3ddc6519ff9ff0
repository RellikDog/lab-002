e67144290d6e5cd4a67bde8008e1c7ca
'use strict'; // Vinicio - let's use the full name in these instances
// const Vehicle = require('../constructor.js');

const Vehicle = require('../vehicle-class.js');

describe('Vehicles', () => {
  describe('Car', () => {
    let vehicle = new Vehicle();
    it('has 4 wheels', () => {
      expect(car.wheels).toEqual(4);
    });
    it('can drive', () => {
      expect(car.drive()).toBeTruthy();
    });
    it('can stop', () => {
      expect(car.stop()).toBeTruthy();
    });
    it('cannot do a wheelie', () => {
      expect(car.wheelie).toBeUndefined();
    });
  });
  describe('Motorcycle', () => {
    let motorcycle = new Vehicle.Motorcycle('foo');
    it('has 2 wheels', () => {
      expect(motorcycle.wheels).toEqual(2);
    });
    it('can drive', () => {
      expect(motorcycle.drive()).toBeTruthy();
    });
    it('can stop', () => {
      expect(motorcycle.stop()).toBeTruthy();
    });
    it('cannot do a wheelie', () => {
      expect(motorcycle.wheelie()).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlaGljaGxlLWNsYXNzLnRlc3QuanMiXSwibmFtZXMiOlsiVmVoaWNsZSIsInJlcXVpcmUiLCJkZXNjcmliZSIsInZlaGljbGUiLCJpdCIsImV4cGVjdCIsImNhciIsIndoZWVscyIsInRvRXF1YWwiLCJkcml2ZSIsInRvQmVUcnV0aHkiLCJzdG9wIiwid2hlZWxpZSIsInRvQmVVbmRlZmluZWQiLCJtb3RvcmN5Y2xlIiwiTW90b3JjeWNsZSJdLCJtYXBwaW5ncyI6IkFBQUEsYSxDQUVBO0FBQ0E7O0FBQ0EsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMscUJBQUQsQ0FBdkI7O0FBRUFDLFFBQVEsQ0FBQyxVQUFELEVBQWEsTUFBTTtBQUV2QkEsRUFBQUEsUUFBUSxDQUFDLEtBQUQsRUFBUSxNQUFNO0FBRWxCLFFBQUlDLE9BQU8sR0FBRyxJQUFJSCxPQUFKLEVBQWQ7QUFFQUksSUFBQUEsRUFBRSxDQUFDLGNBQUQsRUFBaUIsTUFBTTtBQUNyQkMsTUFBQUEsTUFBTSxDQUFDQyxHQUFHLENBQUNDLE1BQUwsQ0FBTixDQUFtQkMsT0FBbkIsQ0FBMkIsQ0FBM0I7QUFDSCxLQUZDLENBQUY7QUFJQUosSUFBQUEsRUFBRSxDQUFDLFdBQUQsRUFBYyxNQUFNO0FBQ2xCQyxNQUFBQSxNQUFNLENBQUNDLEdBQUcsQ0FBQ0csS0FBSixFQUFELENBQU4sQ0FBb0JDLFVBQXBCO0FBQ0gsS0FGQyxDQUFGO0FBSUFOLElBQUFBLEVBQUUsQ0FBQyxVQUFELEVBQWEsTUFBTTtBQUNqQkMsTUFBQUEsTUFBTSxDQUFDQyxHQUFHLENBQUNLLElBQUosRUFBRCxDQUFOLENBQW1CRCxVQUFuQjtBQUNILEtBRkMsQ0FBRjtBQUlBTixJQUFBQSxFQUFFLENBQUMscUJBQUQsRUFBd0IsTUFBTTtBQUM1QkMsTUFBQUEsTUFBTSxDQUFDQyxHQUFHLENBQUNNLE9BQUwsQ0FBTixDQUFvQkMsYUFBcEI7QUFDSCxLQUZDLENBQUY7QUFJSCxHQXBCTyxDQUFSO0FBc0JBWCxFQUFBQSxRQUFRLENBQUMsWUFBRCxFQUFlLE1BQU07QUFFekIsUUFBSVksVUFBVSxHQUFHLElBQUlkLE9BQU8sQ0FBQ2UsVUFBWixDQUF1QixLQUF2QixDQUFqQjtBQUVBWCxJQUFBQSxFQUFFLENBQUMsY0FBRCxFQUFpQixNQUFNO0FBQ3JCQyxNQUFBQSxNQUFNLENBQUNTLFVBQVUsQ0FBQ1AsTUFBWixDQUFOLENBQTBCQyxPQUExQixDQUFrQyxDQUFsQztBQUNILEtBRkMsQ0FBRjtBQUlBSixJQUFBQSxFQUFFLENBQUMsV0FBRCxFQUFjLE1BQU07QUFDbEJDLE1BQUFBLE1BQU0sQ0FBQ1MsVUFBVSxDQUFDTCxLQUFYLEVBQUQsQ0FBTixDQUEyQkMsVUFBM0I7QUFDSCxLQUZDLENBQUY7QUFJQU4sSUFBQUEsRUFBRSxDQUFDLFVBQUQsRUFBYSxNQUFNO0FBQ2pCQyxNQUFBQSxNQUFNLENBQUNTLFVBQVUsQ0FBQ0gsSUFBWCxFQUFELENBQU4sQ0FBMEJELFVBQTFCO0FBQ0gsS0FGQyxDQUFGO0FBSUFOLElBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixNQUFNO0FBQzVCQyxNQUFBQSxNQUFNLENBQUNTLFVBQVUsQ0FBQ0YsT0FBWCxFQUFELENBQU4sQ0FBNkJGLFVBQTdCO0FBQ0gsS0FGQyxDQUFGO0FBSUgsR0FwQk8sQ0FBUjtBQXNCSCxDQTlDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBWaW5pY2lvIC0gbGV0J3MgdXNlIHRoZSBmdWxsIG5hbWUgaW4gdGhlc2UgaW5zdGFuY2VzXG4vLyBjb25zdCBWZWhpY2xlID0gcmVxdWlyZSgnLi4vY29uc3RydWN0b3IuanMnKTtcbmNvbnN0IFZlaGljbGUgPSByZXF1aXJlKCcuLi92ZWhpY2xlLWNsYXNzLmpzJyk7XG5cbmRlc2NyaWJlKCdWZWhpY2xlcycsICgpID0+IHtcblxuICAgIGRlc2NyaWJlKCdDYXInLCAoKSA9PiB7XG5cbiAgICAgICAgbGV0IHZlaGljbGUgPSBuZXcgVmVoaWNsZSgpO1xuXG4gICAgICAgIGl0KCdoYXMgNCB3aGVlbHMnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoY2FyLndoZWVscykudG9FcXVhbCg0KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoJ2NhbiBkcml2ZScsICgpID0+IHtcbiAgICAgICAgICAgIGV4cGVjdChjYXIuZHJpdmUoKSkudG9CZVRydXRoeSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2FuIHN0b3AnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoY2FyLnN0b3AoKSkudG9CZVRydXRoeSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2Fubm90IGRvIGEgd2hlZWxpZScsICgpID0+IHtcbiAgICAgICAgICAgIGV4cGVjdChjYXIud2hlZWxpZSkudG9CZVVuZGVmaW5lZCgpO1xuICAgICAgICB9KTtcblxuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ01vdG9yY3ljbGUnLCAoKSA9PiB7XG5cbiAgICAgICAgbGV0IG1vdG9yY3ljbGUgPSBuZXcgVmVoaWNsZS5Nb3RvcmN5Y2xlKCdmb28nKTtcblxuICAgICAgICBpdCgnaGFzIDIgd2hlZWxzJywgKCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KG1vdG9yY3ljbGUud2hlZWxzKS50b0VxdWFsKDIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2FuIGRyaXZlJywgKCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KG1vdG9yY3ljbGUuZHJpdmUoKSkudG9CZVRydXRoeSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2FuIHN0b3AnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QobW90b3JjeWNsZS5zdG9wKCkpLnRvQmVUcnV0aHkoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoJ2Nhbm5vdCBkbyBhIHdoZWVsaWUnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QobW90b3JjeWNsZS53aGVlbGllKCkpLnRvQmVUcnV0aHkoKTtcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxufSk7Il19