{"version":3,"sources":["vehichle-class.test.js"],"names":["Car","require","Motorcycle","describe","car","it","expect","wheels","toEqual","drive","toBeTruthy","stop","wheelie","toBeUndefined","motorcycle"],"mappings":"AAAA,a,CAEA;AACA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,qBAAD,CAA1B;;AAEAE,QAAQ,CAAC,UAAD,EAAa,MAAM;AAEvBA,EAAAA,QAAQ,CAAC,KAAD,EAAQ,MAAM;AAElB,QAAIC,GAAG,GAAG,IAAIJ,GAAJ,CAAQ,KAAR,CAAV;AAEAK,IAAAA,EAAE,CAAC,cAAD,EAAiB,MAAM;AACrBC,MAAAA,MAAM,CAACF,GAAG,CAACG,MAAL,CAAN,CAAmBC,OAAnB,CAA2B,CAA3B;AACH,KAFC,CAAF;AAIAH,IAAAA,EAAE,CAAC,WAAD,EAAc,MAAM;AAClBC,MAAAA,MAAM,CAACF,GAAG,CAACK,KAAJ,EAAD,CAAN,CAAoBC,UAApB;AACH,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACjBC,MAAAA,MAAM,CAACF,GAAG,CAACO,IAAJ,EAAD,CAAN,CAAmBD,UAAnB;AACH,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC5BC,MAAAA,MAAM,CAACF,GAAG,CAACQ,OAAL,CAAN,CAAoBC,aAApB;AACH,KAFC,CAAF;AAIH,GApBO,CAAR;AAsBAV,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAEzB,QAAIW,UAAU,GAAG,IAAIZ,UAAJ,CAAe,KAAf,CAAjB;AAEAG,IAAAA,EAAE,CAAC,cAAD,EAAiB,MAAM;AACrBC,MAAAA,MAAM,CAACQ,UAAU,CAACP,MAAZ,CAAN,CAA0BC,OAA1B,CAAkC,CAAlC;AACH,KAFC,CAAF;AAIAH,IAAAA,EAAE,CAAC,WAAD,EAAc,MAAM;AAClBC,MAAAA,MAAM,CAACQ,UAAU,CAACL,KAAX,EAAD,CAAN,CAA2BC,UAA3B;AACH,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACjBC,MAAAA,MAAM,CAACQ,UAAU,CAACH,IAAX,EAAD,CAAN,CAA0BD,UAA1B;AACH,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC5BC,MAAAA,MAAM,CAACQ,UAAU,CAACF,OAAX,EAAD,CAAN,CAA6BF,UAA7B;AACH,KAFC,CAAF;AAIH,GApBO,CAAR;AAsBH,CA9CO,CAAR","sourcesContent":["'use strict';\n\n// Vinicio - let's use the full name in these instances\n// const Vehicle = require('../constructor.js');\nconst Car = require('./../vehichle-class');\nconst Motorcycle = require('./../vehichle-class');\n\ndescribe('Vehicles', () => {\n\n    describe('Car', () => {\n\n        let car = new Car('bar');\n\n        it('has 4 wheels', () => {\n            expect(car.wheels).toEqual(4);\n        });\n\n        it('can drive', () => {\n            expect(car.drive()).toBeTruthy();\n        });\n\n        it('can stop', () => {\n            expect(car.stop()).toBeTruthy();\n        });\n\n        it('cannot do a wheelie', () => {\n            expect(car.wheelie).toBeUndefined();\n        });\n\n    });\n\n    describe('Motorcycle', () => {\n\n        let motorcycle = new Motorcycle('foo');\n\n        it('has 2 wheels', () => {\n            expect(motorcycle.wheels).toEqual(2);\n        });\n\n        it('can drive', () => {\n            expect(motorcycle.drive()).toBeTruthy();\n        });\n\n        it('can stop', () => {\n            expect(motorcycle.stop()).toBeTruthy();\n        });\n\n        it('cannot do a wheelie', () => {\n            expect(motorcycle.wheelie()).toBeTruthy();\n        });\n\n    });\n\n});"]}