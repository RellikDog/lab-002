132017f57c127ac65fe1517aee8409c6
'use strict'; // Vinicio - let's use the full name in these instances
// const Vehicle = require('../constructor.js');

const Vehicle = require('./../vehichle-class');

describe('Vehicles', () => {
  describe('Car', () => {
    let car = new Vehicle.Car('foo');
    it('has 4 wheels', () => {
      expect(car.wheels).toEqual(4);
    });
    it('can drive', () => {
      expect(car.drive()).toBeTruthy();
    });
    it('can stop', () => {
      expect(car.stop()).toBeTruthy();
    });
    it('cannot do a wheelie', () => {
      expect(car.wheelie).toBeUndefined();
    });
  });
  describe('Motorcycle', () => {
    let motorcycle = new Vehicle.Motorcycle('foo');
    it('has 2 wheels', () => {
      expect(motorcycle.wheels).toEqual(2);
    });
    it('can drive', () => {
      expect(motorcycle.drive()).toBeTruthy();
    });
    it('can stop', () => {
      expect(motorcycle.stop()).toBeTruthy();
    });
    it('cannot do a wheelie', () => {
      expect(motorcycle.wheelie()).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlaGljaGxlLnRlc3QuanMiXSwibmFtZXMiOlsiVmVoaWNsZSIsInJlcXVpcmUiLCJkZXNjcmliZSIsImNhciIsIkNhciIsIml0IiwiZXhwZWN0Iiwid2hlZWxzIiwidG9FcXVhbCIsImRyaXZlIiwidG9CZVRydXRoeSIsInN0b3AiLCJ3aGVlbGllIiwidG9CZVVuZGVmaW5lZCIsIm1vdG9yY3ljbGUiLCJNb3RvcmN5Y2xlIl0sIm1hcHBpbmdzIjoiQUFBQSxhLENBRUE7QUFDQTs7QUFDQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxxQkFBRCxDQUF2Qjs7QUFFQUMsUUFBUSxDQUFDLFVBQUQsRUFBYSxNQUFNO0FBRXZCQSxFQUFBQSxRQUFRLENBQUMsS0FBRCxFQUFRLE1BQU07QUFFbEIsUUFBSUMsR0FBRyxHQUFHLElBQUlILE9BQU8sQ0FBQ0ksR0FBWixDQUFnQixLQUFoQixDQUFWO0FBRUFDLElBQUFBLEVBQUUsQ0FBQyxjQUFELEVBQWlCLE1BQU07QUFDckJDLE1BQUFBLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDSSxNQUFMLENBQU4sQ0FBbUJDLE9BQW5CLENBQTJCLENBQTNCO0FBQ0gsS0FGQyxDQUFGO0FBSUFILElBQUFBLEVBQUUsQ0FBQyxXQUFELEVBQWMsTUFBTTtBQUNsQkMsTUFBQUEsTUFBTSxDQUFDSCxHQUFHLENBQUNNLEtBQUosRUFBRCxDQUFOLENBQW9CQyxVQUFwQjtBQUNILEtBRkMsQ0FBRjtBQUlBTCxJQUFBQSxFQUFFLENBQUMsVUFBRCxFQUFhLE1BQU07QUFDakJDLE1BQUFBLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDUSxJQUFKLEVBQUQsQ0FBTixDQUFtQkQsVUFBbkI7QUFDSCxLQUZDLENBQUY7QUFJQUwsSUFBQUEsRUFBRSxDQUFDLHFCQUFELEVBQXdCLE1BQU07QUFDNUJDLE1BQUFBLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDUyxPQUFMLENBQU4sQ0FBb0JDLGFBQXBCO0FBQ0gsS0FGQyxDQUFGO0FBSUgsR0FwQk8sQ0FBUjtBQXNCQVgsRUFBQUEsUUFBUSxDQUFDLFlBQUQsRUFBZSxNQUFNO0FBRXpCLFFBQUlZLFVBQVUsR0FBRyxJQUFJZCxPQUFPLENBQUNlLFVBQVosQ0FBdUIsS0FBdkIsQ0FBakI7QUFFQVYsSUFBQUEsRUFBRSxDQUFDLGNBQUQsRUFBaUIsTUFBTTtBQUNyQkMsTUFBQUEsTUFBTSxDQUFDUSxVQUFVLENBQUNQLE1BQVosQ0FBTixDQUEwQkMsT0FBMUIsQ0FBa0MsQ0FBbEM7QUFDSCxLQUZDLENBQUY7QUFJQUgsSUFBQUEsRUFBRSxDQUFDLFdBQUQsRUFBYyxNQUFNO0FBQ2xCQyxNQUFBQSxNQUFNLENBQUNRLFVBQVUsQ0FBQ0wsS0FBWCxFQUFELENBQU4sQ0FBMkJDLFVBQTNCO0FBQ0gsS0FGQyxDQUFGO0FBSUFMLElBQUFBLEVBQUUsQ0FBQyxVQUFELEVBQWEsTUFBTTtBQUNqQkMsTUFBQUEsTUFBTSxDQUFDUSxVQUFVLENBQUNILElBQVgsRUFBRCxDQUFOLENBQTBCRCxVQUExQjtBQUNILEtBRkMsQ0FBRjtBQUlBTCxJQUFBQSxFQUFFLENBQUMscUJBQUQsRUFBd0IsTUFBTTtBQUM1QkMsTUFBQUEsTUFBTSxDQUFDUSxVQUFVLENBQUNGLE9BQVgsRUFBRCxDQUFOLENBQTZCRixVQUE3QjtBQUNILEtBRkMsQ0FBRjtBQUlILEdBcEJPLENBQVI7QUFzQkgsQ0E5Q08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gVmluaWNpbyAtIGxldCdzIHVzZSB0aGUgZnVsbCBuYW1lIGluIHRoZXNlIGluc3RhbmNlc1xuLy8gY29uc3QgVmVoaWNsZSA9IHJlcXVpcmUoJy4uL2NvbnN0cnVjdG9yLmpzJyk7XG5jb25zdCBWZWhpY2xlID0gcmVxdWlyZSgnLi8uLi92ZWhpY2hsZS1jbGFzcycpO1xuXG5kZXNjcmliZSgnVmVoaWNsZXMnLCAoKSA9PiB7XG5cbiAgICBkZXNjcmliZSgnQ2FyJywgKCkgPT4ge1xuXG4gICAgICAgIGxldCBjYXIgPSBuZXcgVmVoaWNsZS5DYXIoJ2ZvbycpO1xuXG4gICAgICAgIGl0KCdoYXMgNCB3aGVlbHMnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoY2FyLndoZWVscykudG9FcXVhbCg0KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoJ2NhbiBkcml2ZScsICgpID0+IHtcbiAgICAgICAgICAgIGV4cGVjdChjYXIuZHJpdmUoKSkudG9CZVRydXRoeSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2FuIHN0b3AnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QoY2FyLnN0b3AoKSkudG9CZVRydXRoeSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2Fubm90IGRvIGEgd2hlZWxpZScsICgpID0+IHtcbiAgICAgICAgICAgIGV4cGVjdChjYXIud2hlZWxpZSkudG9CZVVuZGVmaW5lZCgpO1xuICAgICAgICB9KTtcblxuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ01vdG9yY3ljbGUnLCAoKSA9PiB7XG5cbiAgICAgICAgbGV0IG1vdG9yY3ljbGUgPSBuZXcgVmVoaWNsZS5Nb3RvcmN5Y2xlKCdmb28nKTtcblxuICAgICAgICBpdCgnaGFzIDIgd2hlZWxzJywgKCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KG1vdG9yY3ljbGUud2hlZWxzKS50b0VxdWFsKDIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2FuIGRyaXZlJywgKCkgPT4ge1xuICAgICAgICAgICAgZXhwZWN0KG1vdG9yY3ljbGUuZHJpdmUoKSkudG9CZVRydXRoeSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnY2FuIHN0b3AnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QobW90b3JjeWNsZS5zdG9wKCkpLnRvQmVUcnV0aHkoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoJ2Nhbm5vdCBkbyBhIHdoZWVsaWUnLCAoKSA9PiB7XG4gICAgICAgICAgICBleHBlY3QobW90b3JjeWNsZS53aGVlbGllKCkpLnRvQmVUcnV0aHkoKTtcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxufSk7Il19